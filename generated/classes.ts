// This file has been auto-generated by Warthog.  Do not update directly as it
// will be re-written.  If you need to change this file, update models or add
// new TypeGraphQL objects
// @ts-ignore
import { GraphQLDateTime as DateTime } from "graphql-iso-date";
import { GraphQLID as ID } from "graphql";

// @ts-ignore
import {
  ArgsType,
  Field as TypeGraphQLField,
  Float,
  InputType as TypeGraphQLInputType,
  Int
} from "type-graphql";
// @ts-ignore
import { registerEnumType } from "type-graphql";

// @ts-ignore eslint-disable-next-line @typescript-eslint/no-var-requires
const { GraphQLJSONObject } = require("graphql-type-json");

// @ts-ignore
import { BaseWhereInput, JsonObject, PaginationArgs } from "warthog";
// @ts-ignore
import { Category } from "../src/modules/category/category.model";
// @ts-ignore
import { Card } from "../src/modules/card/card.model";

export enum CategoryOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  name_ASC = "name_ASC",
  name_DESC = "name_DESC"
}

registerEnumType(CategoryOrderByEnum, {
  name: "CategoryOrderByInput"
});

@TypeGraphQLInputType()
export class CategoryWhereInput {
  @TypeGraphQLField(() => String, { nullable: true })
  id_eq?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  id_in?: string[];

  @TypeGraphQLField({ nullable: true })
  createdAt_eq?: String;

  @TypeGraphQLField({ nullable: true })
  createdAt_lt?: String;

  @TypeGraphQLField({ nullable: true })
  createdAt_lte?: String;

  @TypeGraphQLField({ nullable: true })
  createdAt_gt?: String;

  @TypeGraphQLField({ nullable: true })
  createdAt_gte?: String;

  @TypeGraphQLField(() => String, { nullable: true })
  createdById_eq?: string;

  @TypeGraphQLField({ nullable: true })
  updatedAt_eq?: String;

  @TypeGraphQLField({ nullable: true })
  updatedAt_lt?: String;

  @TypeGraphQLField({ nullable: true })
  updatedAt_lte?: String;

  @TypeGraphQLField({ nullable: true })
  updatedAt_gt?: String;

  @TypeGraphQLField({ nullable: true })
  updatedAt_gte?: String;

  @TypeGraphQLField(() => String, { nullable: true })
  updatedById_eq?: string;

  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField({ nullable: true })
  deletedAt_eq?: String;

  @TypeGraphQLField({ nullable: true })
  deletedAt_lt?: String;

  @TypeGraphQLField({ nullable: true })
  deletedAt_lte?: String;

  @TypeGraphQLField({ nullable: true })
  deletedAt_gt?: String;

  @TypeGraphQLField({ nullable: true })
  deletedAt_gte?: String;

  @TypeGraphQLField(() => String, { nullable: true })
  deletedById_eq?: string;

  @TypeGraphQLField({ nullable: true })
  name_eq?: string;

  @TypeGraphQLField({ nullable: true })
  name_contains?: string;

  @TypeGraphQLField({ nullable: true })
  name_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  name_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  name_in?: string[];
}

@TypeGraphQLInputType()
export class CategoryWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class CategoryCreateInput {
  @TypeGraphQLField({ nullable: true })
  name?: string;
}

@TypeGraphQLInputType()
export class CategoryUpdateInput {
  @TypeGraphQLField({ nullable: true })
  name?: string;
}

@ArgsType()
export class CategoryWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => CategoryWhereInput, { nullable: true })
  where?: CategoryWhereInput;

  @TypeGraphQLField(() => CategoryOrderByEnum, { nullable: true })
  orderBy?: CategoryOrderByEnum;
}

@ArgsType()
export class CategoryCreateManyArgs {
  @TypeGraphQLField(() => [CategoryCreateInput])
  data!: CategoryCreateInput[];
}

@ArgsType()
export class CategoryUpdateArgs {
  @TypeGraphQLField() data!: CategoryUpdateInput;
  @TypeGraphQLField() where!: CategoryWhereUniqueInput;
}

export enum CardOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  number_ASC = "number_ASC",
  number_DESC = "number_DESC",

  label_ASC = "label_ASC",
  label_DESC = "label_DESC"
}

registerEnumType(CardOrderByEnum, {
  name: "CardOrderByInput"
});

@TypeGraphQLInputType()
export class CardWhereInput {
  @TypeGraphQLField(() => String, { nullable: true })
  id_eq?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  id_in?: string[];

  @TypeGraphQLField({ nullable: true })
  createdAt_eq?: String;

  @TypeGraphQLField({ nullable: true })
  createdAt_lt?: String;

  @TypeGraphQLField({ nullable: true })
  createdAt_lte?: String;

  @TypeGraphQLField({ nullable: true })
  createdAt_gt?: String;

  @TypeGraphQLField({ nullable: true })
  createdAt_gte?: String;

  @TypeGraphQLField(() => String, { nullable: true })
  createdById_eq?: string;

  @TypeGraphQLField({ nullable: true })
  updatedAt_eq?: String;

  @TypeGraphQLField({ nullable: true })
  updatedAt_lt?: String;

  @TypeGraphQLField({ nullable: true })
  updatedAt_lte?: String;

  @TypeGraphQLField({ nullable: true })
  updatedAt_gt?: String;

  @TypeGraphQLField({ nullable: true })
  updatedAt_gte?: String;

  @TypeGraphQLField(() => String, { nullable: true })
  updatedById_eq?: string;

  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField({ nullable: true })
  deletedAt_eq?: String;

  @TypeGraphQLField({ nullable: true })
  deletedAt_lt?: String;

  @TypeGraphQLField({ nullable: true })
  deletedAt_lte?: String;

  @TypeGraphQLField({ nullable: true })
  deletedAt_gt?: String;

  @TypeGraphQLField({ nullable: true })
  deletedAt_gte?: String;

  @TypeGraphQLField(() => String, { nullable: true })
  deletedById_eq?: string;

  @TypeGraphQLField(() => Int, { nullable: true })
  number_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  number_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  number_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  number_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  number_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  number_in?: number[];

  @TypeGraphQLField({ nullable: true })
  label_eq?: string;

  @TypeGraphQLField({ nullable: true })
  label_contains?: string;

  @TypeGraphQLField({ nullable: true })
  label_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  label_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  label_in?: string[];
}

@TypeGraphQLInputType()
export class CardWhereUniqueInput {
  @TypeGraphQLField(() => String)
  id?: string;
}

@TypeGraphQLInputType()
export class CardCreateInput {
  @TypeGraphQLField({ nullable: true })
  number?: number;

  @TypeGraphQLField({ nullable: true })
  label?: string;
}

@TypeGraphQLInputType()
export class CardUpdateInput {
  @TypeGraphQLField({ nullable: true })
  number?: number;

  @TypeGraphQLField({ nullable: true })
  label?: string;
}

@ArgsType()
export class CardWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => CardWhereInput, { nullable: true })
  where?: CardWhereInput;

  @TypeGraphQLField(() => CardOrderByEnum, { nullable: true })
  orderBy?: CardOrderByEnum;
}

@ArgsType()
export class CardCreateManyArgs {
  @TypeGraphQLField(() => [CardCreateInput])
  data!: CardCreateInput[];
}

@ArgsType()
export class CardUpdateArgs {
  @TypeGraphQLField() data!: CardUpdateInput;
  @TypeGraphQLField() where!: CardWhereUniqueInput;
}
